
x-environment: &default-environment
  DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@db:5432/glitchtip
  SECRET_KEY: ${SECRET}
  PORT: ${PORT}
  EMAIL_URL: ${EMAIL_URL}
  GLITCHTIP_DOMAIN: ${DOMAIN}
  DEFAULT_FROM_EMAIL: ${EMAIL_FROM}
  GLITCHTIP_MAX_EVENT_LIFE_DAYS: "1461"
  ENABLE_USER_REGISTRATION: "True"
  ENABLE_ORGANIZATION_CREATION: "False"

x-depends_on: &default-depends_on
  db:
    condition: service_healthy
  redis:
    condition: service_healthy

services:
  db:
    image: postgres:17
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: glitchtip
    restart: unless-stopped
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready', '-d', 'glitchtip' ]
      interval: 5s
      timeout: 4s
      retries: 6
      start_period: 5s

  redis:
    image: valkey/valkey
    restart: unless-stopped
    healthcheck:
      test: [ 'CMD', 'redis-cli', 'ping' ]
      interval: 5s
      timeout: 4s
      retries: 6

  web:
    image: glitchtip/glitchtip
    depends_on: *default-depends_on
    ports:
      - "${PORT}:${PORT}"
    environment: *default-environment
    restart: unless-stopped
    volumes:
      - up_data:/code/uploads

  worker:
    image: glitchtip/glitchtip
    command: ./bin/run-celery-with-beat.sh
    depends_on: *default-depends_on
    environment: *default-environment
    restart: unless-stopped
    volumes:
      - up_data:/code/uploads

  migrate:
    image: glitchtip/glitchtip
    depends_on: *default-depends_on
    command: ./bin/run-migrate.sh
    environment: *default-environment

  backup:
    image: prodrigestivill/postgres-backup-local
    restart: unless-stopped
    volumes:
      - backup:/backups
    links:
      - db
    depends_on:
      db:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=glitchtip
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - SCHEDULE=@daily
      - BACKUP_KEEP_DAYS=7
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
    profiles:
      - test
      - production

volumes:
  pg_data:
    name: ${VOLUME_DB}
    external: true

  up_data:
    name: ${VOLUME_UPLOAD}
    external: true

  backup:
    name: ${VOLUME_BACKUP}
    external: true